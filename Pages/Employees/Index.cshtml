@page
@model NET_9_Business_App_MVC_CRUD.Pages.Employees.IndexModel

@{
    ViewData["Title"] = "Employees Home";
}

<div style="padding-bottom:1.5rem;">
    @await Html.PartialAsync("_SearchBar")
</div>
<!--Index View Departments-->
<div class="center">
    <div class='container-fluid'>
        @section title_section {
            <h3 style="color:dodgerblue;">Employee Details</h3>
        }
        <div class='header' style="padding-bottom:0.75rem;">
            <a class="btn btn-outline-success btn-sm" href='/employees/create'>Create</a>
        </div>
        <!--TODO: Change this to a dl, dd, dt set instead of table for better accessibility-->
        <table class="table table-dark">
        <!--Table Head-->
        <thead style="margin-bottom:0.75rem;">
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Position</th>
                <th>Salary</th>
                <th>Department</th>
                <th>Actions</th>
            </tr>
        </thead>
        <!--Table Body-->
        <tbody id="employee-list">
                @await Component.InvokeAsync("EmployeeList")
        </tbody>
        </table>
        </div><!--close container-->
</div><!--close center class-->
<!--End of Razor Page for Employees-->

<!--script section for Search Bar functionality-->

@section scripts
{
    <script>
       
        document.querySelector("#search-button").addEventListener("click", async()=>{
        var filter = document.querySelector("#search-filter").value;
        loadEmployees(filter);

        });

        async function loadEmployees(filter){
            var response = await fetch(`/department-list/${filter}`);
            var employeesHtml = await response.text();
                 document.querySelector("#department-list").innerHTML = employeesHtml;
       }
     
    </script>

    @*loadDepartments('');

    

    
</script> *@
}
